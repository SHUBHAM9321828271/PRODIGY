from sklearn.cluster import KMeans
import pandas as pd
from sklearn.preprocessing import MinMaxScaler
from matplotlib import pyplot as plt

df = pd.read_csv("Mall_Customers.csv")
print(df.head())

plt.xlabel('Annual Income')
plt.ylabel('Spending score')
plt.scatter(df['Annual Income (k$)'], df['Spending Score (1-100)'])
plt.show()

km = KMeans(n_clusters = 5)

y_predicted = km.fit_predict(df[['Annual Income (k$)','Spending Score (1-100)']])
print(y_predicted)
df['cluster'] = y_predicted

df1 = df[df.cluster == 0]
df2 = df[df.cluster == 1]
df3 = df[df.cluster == 2]
df4 = df[df.cluster == 3]
df5 = df[df.cluster == 4]

plt.scatter(df1['Annual Income (k$)'], df1['Spending Score (1-100)'], color = 'green')
plt.scatter(df2['Annual Income (k$)'], df2['Spending Score (1-100)'], color = 'red')
plt.scatter(df3['Annual Income (k$)'], df3['Spending Score (1-100)'], color = 'black')
plt.scatter(df4['Annual Income (k$)'], df4['Spending Score (1-100)'], color = 'yellow')
plt.scatter(df5['Annual Income (k$)'], df5['Spending Score (1-100)'], color = 'brown')
plt.scatter(km.cluster_centers_[:,0], km.cluster_centers_[:,1], color = 'purple', marker = '*', label = 'centroid')
plt.legend()
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')
plt.show()

#scaler = MinMaxScaler()
#scaler.fit(df[['Spending Score (1-100)']])
#scaler.fit(df[['Annual Income (k$)']])
#df['Spending Score (1-100)'] = scaler.transform(df['Spending Score (1-100)'])
#df['Annual Income (k$)'] = scaler.transform(df['Annual Income (k$)'])

k_rng = range(1, 10)
sse = []
for k in k_rng:
    km = KMeans(n_clusters = k)
    km.fit(df[['Annual Income (k$)', 'Spending Score (1-100)']])
    sse.append(km.inertia_)

print(sse)

plt.xlabel('K')
plt.ylabel('Sum of squared error')
plt.plot(k_rng, sse)
plt.show()

